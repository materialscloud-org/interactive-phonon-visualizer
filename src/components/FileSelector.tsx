import React, { useEffect, useState } from "react";
import { Form, Row, Col, Button } from "react-bootstrap";

interface FormLabelProps {
  id: string;
  text: string;
  tip: string;
}

const FileSelector = ({ callback }: { callback: CallableFunction }) => {
  const [labels, setControls] = useState<FormLabelProps[]>([]);
  const [inputFormat, setInputFormat] = useState("Quantum ESPRESSO");

  const handleSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setInputFormat(event.target.value);
  };

  useEffect(() => {
    if (inputFormat === "Quantum ESPRESSO") {
      setControls([
        {
          id: "scfInput",
          text: "SCF pw.x input",
          tip: "The input file of an SCF calculation",
        },
        {
          id: "scfOutput",
          text: "SCF pw.x output",
          tip: "The output file of an SCF calculation",
        },
        {
          id: "matdynModes",
          text: "matdyn.modes",
          tip: "The file generated by matdyn.x",
        },
      ]);
    } else if (inputFormat === "PhononVis") {
      setControls([
        {
          id: "phononVisJson",
          text: "Phonon Visualizer JSON",
          tip: "A custom visualizer configuration file",
        },
      ]);
    } else {
      throw new Error("Invalid input format");
    }
  }, [inputFormat]);

  return (
    <Form>
      <Row>
        <Col>
          <Form.Label htmlFor="fileSelector">
            Input format{" "}
            <i
              className="bi bi-info-circle-fill"
              title="See About tab for information on supported file formats"
            />
          </Form.Label>
        </Col>
        <Col md="8">
          <Form.Select id="fileSelector" onChange={handleSelection}>
            <option>Quantum ESPRESSO</option>
            <option>PhononVis</option>
          </Form.Select>
        </Col>
      </Row>

      {labels.map((label, index) => (
        <Row key={index}>
          <Col>
            <Form.Label htmlFor={label.id}>
              {label.text}{" "}
              <i className="bi bi-info-circle-fill" title={label.tip} />
            </Form.Label>
          </Col>
          <Col md="8">
            <Form.Control id={label.id} type="file" />
          </Col>
        </Row>
      ))}

      <p>
        By continuing, you agree with the <strong>terms of use</strong> of this
        service.
      </p>
      <Button type="submit" className="mb-2" onClick={() => callback()}>
        Calculate phonon dispersion
      </Button>
    </Form>
  );
};

export default FileSelector;
